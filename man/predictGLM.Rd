% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iid.R
\name{predictGLM}
\alias{predictGLM}
\title{Compute the influence function for the prediction.}
\usage{
predictGLM(object, newdata, average.iid = FALSE)
}
\arguments{
\item{object}{glm model.}

\item{newdata}{[data.frame] dataset containing the covariate to condition on.}

\item{average.iid}{[logical] Should the influence function be averaged over the empirical distribution.}
}
\description{
Compute the influence function for the prediction from a linear or logistic model.
}
\examples{
\dontrun{
library(lava)
m <- lvm(Y~X1+X2+X3)

set.seed(10)
d <- lava::sim(m, 1e2)

## check for lm
e.lm <- lm(Y~X1+X2+X3, data = d)
test <- predictGLM(e.lm, newdata = d)
test.av <- predictGLM(e.lm, newdata = d, average.iid = TRUE)

GS <- lava::estimate(e.lm, f = function(p,data){
  p["(Intercept)"] + d[,"X1"] * p["X1"] + d[,"X2"] * p["X2"] + d[,"X3"] * p["X3"]
})
range(test[,1]-GS$coef)
range(attr(test,"iid")-t(GS$iid))
range(colMeans(attr(test,"iid"))-attr(test.av,"iid"))

## check for glm
e.glm <- glm(I(Y>0)~X1+X2+X3, data = d, family = binomial(link = "logit"))
test <- predictGLM(e.glm, newdata = d)
test.av <- predictGLM(e.glm, newdata = d, average.iid = TRUE)

GS <- lava::estimate(e.glm, f = function(p,data){
  lava::expit(p["(Intercept)"] + d[,"X1"] * p["X1"] + d[,"X2"] * p["X2"] + d[,"X3"] * p["X3"])
})
range(test[,1]-GS$coef)
range(attr(test,"iid")-t(GS$iid))
range(colMeans(attr(test,"iid"))-attr(test.av,"iid"))
}
}
